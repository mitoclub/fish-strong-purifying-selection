New = cbind(
rep(OnePetriDish$petri,OnePetriDish$total),
rep(OnePetriDish$family,OnePetriDish$total),
rep(OnePetriDish$temperature,OnePetriDish$total),
rep(OnePetriDish$time,OnePetriDish$total),
rep(OnePetriDish$enu,OnePetriDish$total),
c(rep(1,OnePetriDish$alive),rep(0,OnePetriDish$dead)),                                                       # FertilizedOrNot
c(rep(1,OnePetriDish$hatched),rep(0,OnePetriDish$alive - OnePetriDish$hatched),rep(NA,OnePetriDish$dead)),   # HatchedOrNot
c(rep(1,OnePetriDish$swimming + OnePetriDish$freaks),rep(0,OnePetriDish$hatched - OnePetriDish$swimming -  OnePetriDish$freaks),rep(NA,OnePetriDish$total-OnePetriDish$swimming-OnePetriDish$freaks - (OnePetriDish$hatched - OnePetriDish$swimming -  OnePetriDish$freaks))),                                                                                           # SwimmingOrNot
c(rep(1,OnePetriDish$swimming),rep(0,OnePetriDish$freaks),rep(NA,OnePetriDish$total-OnePetriDish$swimming-OnePetriDish$freaks))
# SwimmingNormallyOrNot
)
New = data.frame(New)
names(New)=c('petri','family','temperature','time','enu','FertilizedOrNot','HatchedOrNot','SwimmingOrNot','SwimmingNormallyOrNot')
if (i == 1) {Final = New}
if (i >  1) {Final = rbind(Final,New)}
}
### delete enu = 2 and keep only 0 (healthy) and 1 (mutants)
table(Final$enu)
Final$DummyMutant1 = NA
Final$DummyMutant2 = NA
table(Final$time)
Final$DummyShock30 = NA
Final$DummyShock40 = NA
Final$DummyShock50 = NA
for (i in 1:nrow(Final))
{ # i = 1
if (Final$enu[i] == 0) {Final$DummyMutant1[i] = 0}
if (Final$enu[i] == 1) {Final$DummyMutant1[i] = 1}
if (Final$enu[i] == 0) {Final$DummyMutant2[i] = 0}
if (Final$enu[i] == 2) {Final$DummyMutant2[i] = 1}
if (Final$time[i] == 0) {Final$DummyShock30[i] = 0}
if (Final$time[i] == 30) {Final$DummyShock30[i] = 1}
if (Final$time[i] == 0) {Final$DummyShock40[i] = 0}
if (Final$time[i] == 40) {Final$DummyShock40[i] = 1}
if (Final$time[i] == 0) {Final$DummyShock50[i] = 0}
if (Final$time[i] == 50) {Final$DummyShock50[i] = 1}
}
str(Final)
table(Final$DummyMutant1)
table(Final$DummyMutant2)
table(Final$DummyShock30)
table(Final$DummyShock40)
table(Final$DummyShock50)
Final$HatchedOrNot = as.numeric(Final$HatchedOrNot)
Final$SwimmingOrNot = as.numeric(Final$SwimmingOrNot)
Final$SwimmingNormallyOrNot = as.numeric(Final$SwimmingNormallyOrNot)
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1))
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2))
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1))
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyMutant2))
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1))
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2))
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1))
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2))
summary(glm(Final$HatchedOrNot ~ Final$DummyShock30))
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1))
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2))
summary(glm(Final$HatchedOrNot ~ Final$DummyShock30))
summary(glm(Final$HatchedOrNot ~ Final$DummyShock40)) # -0.09861
summary(glm(Final$HatchedOrNot ~ Final$DummyShock50)) # -0.29337
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyShock30)) # -0.09861
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyShock40)) # -0.09861
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyShock50)) # -0.33227 -0.18738
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2 + Final$DummyShock30)) # -0.14569 -0.12580
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2 + Final$DummyShock40)) # -0.33227 -0.18738
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2 + Final$DummyShock50)) # -0.12456 -0.33181
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock30)) # -0.14569 -0.12580
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock40)) # -0.33227 -0.18738
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyShock50)) # -0.12456 -0.33181
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock30))   # +
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock40))   # -
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyShock50)) # -
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock50)) # -
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock30))   # 0.17957
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock40))   # -0.16664
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock50))   # 0.21221
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock30)) # -0.28138 -0.16401
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock40)) # -0.49034 -0.27339
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock50)) # -0.29477 -0.39412
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock40))   # -0.33871
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock40))   # -0.16664
Final$family
table(Final$family)
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock30), family = binomial)   # 0.11046
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock40))   # -0.33871
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock40), family = binomial)   # -0.33871
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock30), family = binomial)   # 0.11046
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock50), family = binomial)   # 0.09146
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock40), family = binomial)   # -0.33871
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock30), family = binomial)   # 0.11046
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock40), family = binomial)   # -0.33871
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock50), family = binomial)   # 0.09146
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock30), family = binomial)   # 0.17957
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock40), family = binomial)   # -0.16664
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock50), family = binomial)   # 0.21221
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
library(knitr)
library(tidyverse)
library(kableExtra)
Fish = read.table('../data/fishes_shok.txt', header=TRUE)
head(Fish)
table(Fish$family)
table(Fish$temperature)
table(Fish$time)
summary(Fish$fertilization_per)
summary(Fish$hatched_per)
summary(Fish$swim_per)
Problem1 = Fish[Fish$swim_per > 100,]
Problem2 = Fish[Fish$swimming + Fish$freaks > Fish$hatched,]
Problem3 = Fish[Fish$hatched > Fish$alive,] # 0
Problem4 = Fish[Fish$alive > Fish$total,]   # 0
Problems = rbind(Problem1,Problem2)
Problems
dim(Fish)
Fish = Fish[!Fish$petri %in% Problems$petri,]
dim(Fish)
for (i in 1:nrow(Fish))
{ # i = 3
OnePetriDish = Fish[i,]
New = cbind(
rep(OnePetriDish$petri,OnePetriDish$total),
rep(OnePetriDish$family,OnePetriDish$total),
rep(OnePetriDish$temperature,OnePetriDish$total),
rep(OnePetriDish$time,OnePetriDish$total),
rep(OnePetriDish$enu,OnePetriDish$total),
c(rep(1,OnePetriDish$alive),rep(0,OnePetriDish$dead)),                                                       # FertilizedOrNot
c(rep(1,OnePetriDish$hatched),rep(0,OnePetriDish$alive - OnePetriDish$hatched),rep(NA,OnePetriDish$dead)),   # HatchedOrNot
c(rep(1,OnePetriDish$swimming + OnePetriDish$freaks),rep(0,OnePetriDish$hatched - OnePetriDish$swimming -  OnePetriDish$freaks),rep(NA,OnePetriDish$total-OnePetriDish$swimming-OnePetriDish$freaks - (OnePetriDish$hatched - OnePetriDish$swimming -  OnePetriDish$freaks))),                                                                                           # SwimmingOrNot
c(rep(1,OnePetriDish$swimming),rep(0,OnePetriDish$freaks),rep(NA,OnePetriDish$total-OnePetriDish$swimming-OnePetriDish$freaks))
# SwimmingNormallyOrNot
)
New = data.frame(New)
names(New)=c('petri','family','temperature','time','enu','FertilizedOrNot','HatchedOrNot','SwimmingOrNot','SwimmingNormallyOrNot')
if (i == 1) {Final = New}
if (i >  1) {Final = rbind(Final,New)}
}
### delete enu = 2 and keep only 0 (healthy) and 1 (mutants)
table(Final$enu)
Final$DummyMutant1 = NA
Final$DummyMutant2 = NA
table(Final$time)
Final$DummyShock30 = NA
Final$DummyShock40 = NA
Final$DummyShock50 = NA
for (i in 1:nrow(Final))
{ # i = 1
if (Final$enu[i] == 0) {Final$DummyMutant1[i] = 0}
if (Final$enu[i] == 1) {Final$DummyMutant1[i] = 1}
if (Final$enu[i] == 0) {Final$DummyMutant2[i] = 0}
if (Final$enu[i] == 2) {Final$DummyMutant2[i] = 1}
if (Final$time[i] == 0) {Final$DummyShock30[i] = 0}
if (Final$time[i] == 30) {Final$DummyShock30[i] = 1}
if (Final$time[i] == 0) {Final$DummyShock40[i] = 0}
if (Final$time[i] == 40) {Final$DummyShock40[i] = 1}
if (Final$time[i] == 0) {Final$DummyShock50[i] = 0}
if (Final$time[i] == 50) {Final$DummyShock50[i] = 1}
}
str(Final)
table(Final$DummyMutant1)
table(Final$DummyMutant2)
table(Final$DummyShock30)
table(Final$DummyShock40)
table(Final$DummyShock50)
Final$HatchedOrNot = as.numeric(Final$HatchedOrNot)
Final$SwimmingOrNot = as.numeric(Final$SwimmingOrNot)
Final$SwimmingNormallyOrNot = as.numeric(Final$SwimmingNormallyOrNot)
Fam11=Final[Final$family == '1x1',]
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock30))   # 0.17957
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock40))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock50))   # 0.21221
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock30))   # 0.11046
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock40))   # -0.33871
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock50))   # 0.09146
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock30))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock40))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock50))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock30))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock40))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock50))
Fam11=Final[Final$family == '1x1',]
Fam12=Final[Final$family == '1x2',]
Fam21=Final[Final$family == '2x1',]
Fam22=Final[Final$family == '2x2',]
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock30))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock40))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock50)) # +
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock30))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock40))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock50)) # +
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant1*Fam12$DummyShock30))
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant1*Fam12$DummyShock40))
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant1*Fam12$DummyShock50)) # +
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant2*Fam12$DummyShock30))
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant2*Fam12$DummyShock40))
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant2*Fam12$DummyShock50)) # +
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant1*Fam21$DummyShock30))
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant1*Fam21$DummyShock40))
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant1*Fam21$DummyShock50)) # +
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant2*Fam21$DummyShock30))
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant2*Fam21$DummyShock40))
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant2*Fam21$DummyShock50)) # +
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant1*Fam22$DummyShock30))
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant1*Fam22$DummyShock40))
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant1*Fam22$DummyShock50)) # -
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant2*Fam22$DummyShock30)) # +
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant2*Fam22$DummyShock40))
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant2*Fam22$DummyShock50))
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant1*Fam22$DummyShock30))
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant1*Fam22$DummyShock40))
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant1*Fam22$DummyShock50))
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant2*Fam22$DummyShock30))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock30))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock30)) # +
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock40))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1)) # -0.154517
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant2)) # -0.311602
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyMutant1)) # -0.037158
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyMutant2)) # -0.076814
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock30)) # -0.09861
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock40)) # -0.29337
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock50)) # -0.29061
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock30)) # -0.063301
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock40)) # 0
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock50)) # 0
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock30, family = binomial)) # 0.11179
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock30, family = binomial)) # 0.11179
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock40, family = binomial)) # 0
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock50, family = binomial)) # 0.12106
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock30, family = binomial)) # -0.063301
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock40, family = binomial)) # 0
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock50, family = binomial)) # 0
summary(glm(Final$HatchedOrNot ~ Final$DummyShock30, family = binomial)) # -0.09861
summary(glm(Final$HatchedOrNot ~ Final$DummyShock40, family = binomial)) # -0.29337
summary(glm(Final$HatchedOrNot ~ Final$DummyShock50, family = binomial)) # -0.29061
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1, family = binomial)) # -0.154517
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2, family = binomial)) # -0.311602
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1, family = binomial)) # -0.037158
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant2, family = binomial)) # -0.076814
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyMutant1, family = binomial)) # -0.19768
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyMutant2, family = binomial)) # -0.336337
summary(glm(Final$HatchedOrNot ~ Final$DummyShock30, family = binomial)) # -0.39905
summary(glm(Final$HatchedOrNot ~ Final$DummyShock40, family = binomial)) # -1.22456
summary(glm(Final$HatchedOrNot ~ Final$DummyShock50, family = binomial)) # -1.21147
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock30, family = binomial)) # -1.0765
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock40, family = binomial)) # 0
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock50, family = binomial)) # 0
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock30, family = binomial)) # 0.62001
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock40, family = binomial)) # 0
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock50, family = binomial)) # 0.68270
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1, family = binomial)) # -0.62380
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2, family = binomial)) # -1.34791
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1, family = binomial)) # -0.7701
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant2, family = binomial)) # -1.2542
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyMutant1, family = binomial)) # -1.25509
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyMutant2, family = binomial)) # -1.84769
summary(glm(Final$HatchedOrNot ~ Final$DummyShock30, family = binomial)) # -0.39905
summary(glm(Final$HatchedOrNot ~ Final$DummyShock40, family = binomial)) # -1.22456
summary(glm(Final$HatchedOrNot ~ Final$DummyShock50, family = binomial)) # -1.21147
summary(glm(Final$FertilizedOrNot ~ Final$DummyMutant1, family = binomial)) # -0.62380
Final$FertilizedOrNot = as.numeric(Final$FertilizedOrNot)
summary(glm(Final$FertilizedOrNot ~ Final$DummyMutant1, family = binomial)) # -0.62380
summary(glm(Final$FertilizedOrNot ~ Final$DummyMutant2, family = binomial)) # -1.34791
summary(glm(Final$FertilizedOrNot ~ Final$DummyShock30, family = binomial)) # -0.43879
summary(glm(Final$FertilizedOrNot ~ Final$DummyShock30, family = binomial)) # -0.43879
summary(glm(Final$FertilizedOrNot ~ Final$DummyShock40, family = binomial)) # -0.43879
summary(glm(Final$FertilizedOrNot ~ Final$DummyShock50, family = binomial)) # -0.43879
summary(glm(Final$FertilizedOrNot ~ Final$DummyShock40, family = binomial)) # -0.36805
summary(glm(Final$FertilizedOrNot ~ Final$DummyShock30, family = binomial)) # 0.20943
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1 + Final$DummyShock30)) # -0.14569 -0.12580
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1 + Final$DummyShock30)) # -0.14569 -0.12580
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1 + Final$DummyShock40))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1 + Final$DummyShock50))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant2 + Final$DummyShock30))
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyShock30, family = binomial)) # -0.14569 -0.12580
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyShock40, family = binomial)) # -0.33227 -0.18738
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyShock50, family = binomial)) # -0.12456 -0.33181
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2 + Final$DummyShock30, family = binomial)) # -0.28138 -0.16401
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2 + Final$DummyShock40, family = binomial)) # -0.49034 -0.27339
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2 + Final$DummyShock50, family = binomial)) # -0.29477 -0.39412
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1 + Final$DummyShock30, family = binomial))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1 + Final$DummyShock40, family = binomial))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1 + Final$DummyShock50, family = binomial))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant2 + Final$DummyShock30, family = binomial))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant2 + Final$DummyShock40, family = binomial))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant2 + Final$DummyShock50, family = binomial))
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock30, family = binomial))   # 0.17957 ***
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock40, family = binomial))   # -0.16664 ***
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock30, family = binomial))   # 0.8869 ***
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock50, family = binomial))   # 0.21221 ***
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock30, family = binomial))   # 0.11046 **
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock40, family = binomial))  # -0.33871 ***
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock50, family = binomial))   # 0.09146 *
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
library(knitr)
library(tidyverse)
library(kableExtra)
for (i in 1:nrow(Fish))
{ # i = 3
OnePetriDish = Fish[i,]
New = cbind(
rep(OnePetriDish$petri,OnePetriDish$total),
rep(OnePetriDish$family,OnePetriDish$total),
rep(OnePetriDish$temperature,OnePetriDish$total),
rep(OnePetriDish$time,OnePetriDish$total),
rep(OnePetriDish$enu,OnePetriDish$total),
c(rep(1,OnePetriDish$alive),rep(0,OnePetriDish$dead)),                                                       # FertilizedOrNot
c(rep(1,OnePetriDish$hatched),rep(0,OnePetriDish$alive - OnePetriDish$hatched),rep(NA,OnePetriDish$dead)),   # HatchedOrNot
c(rep(1,OnePetriDish$swimming + OnePetriDish$freaks),rep(0,OnePetriDish$hatched - OnePetriDish$swimming -  OnePetriDish$freaks),rep(NA,OnePetriDish$total-OnePetriDish$swimming-OnePetriDish$freaks - (OnePetriDish$hatched - OnePetriDish$swimming -  OnePetriDish$freaks))),                                                                                           # SwimmingOrNot
c(rep(1,OnePetriDish$swimming),rep(0,OnePetriDish$freaks),rep(NA,OnePetriDish$total-OnePetriDish$swimming-OnePetriDish$freaks))
# SwimmingNormallyOrNot
)
New = data.frame(New)
names(New)=c('petri','family','temperature','time','enu','FertilizedOrNot','HatchedOrNot','SwimmingOrNot','SwimmingNormallyOrNot')
if (i == 1) {Final = New}
if (i >  1) {Final = rbind(Final,New)}
}
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
library(knitr)
library(tidyverse)
library(kableExtra)
Fish = read.table('../data/fishes_shok.txt', header=TRUE)
head(Fish)
table(Fish$family)
table(Fish$temperature)
table(Fish$time)
summary(Fish$fertilization_per)
summary(Fish$hatched_per)
summary(Fish$swim_per)
for (i in 1:nrow(Fish))
{ # i = 3
OnePetriDish = Fish[i,]
New = cbind(
rep(OnePetriDish$petri,OnePetriDish$total),
rep(OnePetriDish$family,OnePetriDish$total),
rep(OnePetriDish$temperature,OnePetriDish$total),
rep(OnePetriDish$time,OnePetriDish$total),
rep(OnePetriDish$enu,OnePetriDish$total),
c(rep(1,OnePetriDish$alive),rep(0,OnePetriDish$dead)),                                                       # FertilizedOrNot
c(rep(1,OnePetriDish$hatched),rep(0,OnePetriDish$alive - OnePetriDish$hatched),rep(NA,OnePetriDish$dead)),   # HatchedOrNot
c(rep(1,OnePetriDish$swimming + OnePetriDish$freaks),rep(0,OnePetriDish$hatched - OnePetriDish$swimming -  OnePetriDish$freaks),rep(NA,OnePetriDish$total-OnePetriDish$swimming-OnePetriDish$freaks - (OnePetriDish$hatched - OnePetriDish$swimming -  OnePetriDish$freaks))),                                                                                           # SwimmingOrNot
c(rep(1,OnePetriDish$swimming),rep(0,OnePetriDish$freaks),rep(NA,OnePetriDish$total-OnePetriDish$swimming-OnePetriDish$freaks))
# SwimmingNormallyOrNot
)
New = data.frame(New)
names(New)=c('petri','family','temperature','time','enu','FertilizedOrNot','HatchedOrNot','SwimmingOrNot','SwimmingNormallyOrNot')
if (i == 1) {Final = New}
if (i >  1) {Final = rbind(Final,New)}
}
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
library(knitr)
library(tidyverse)
library(kableExtra)
Fish = read.table('../data/fishes_shok.txt', header=TRUE)
head(Fish)
table(Fish$family)
table(Fish$temperature)
table(Fish$time)
summary(Fish$fertilization_per)
summary(Fish$hatched_per)
summary(Fish$swim_per)
Problem1 = Fish[Fish$swim_per > 100,]
Problem2 = Fish[Fish$swimming + Fish$freaks > Fish$hatched,]
Problem3 = Fish[Fish$hatched > Fish$alive,] # 0
Problem4 = Fish[Fish$alive > Fish$total,]   # 0
Problems = rbind(Problem1,Problem2)
Problems
dim(Fish)
Fish = Fish[!Fish$petri %in% Problems$petri,]
dim(Fish)
for (i in 1:nrow(Fish))
{ # i = 3
OnePetriDish = Fish[i,]
New = cbind(
rep(OnePetriDish$petri,OnePetriDish$total),
rep(OnePetriDish$family,OnePetriDish$total),
rep(OnePetriDish$temperature,OnePetriDish$total),
rep(OnePetriDish$time,OnePetriDish$total),
rep(OnePetriDish$enu,OnePetriDish$total),
c(rep(1,OnePetriDish$alive),rep(0,OnePetriDish$dead)),                                                       # FertilizedOrNot
c(rep(1,OnePetriDish$hatched),rep(0,OnePetriDish$alive - OnePetriDish$hatched),rep(NA,OnePetriDish$dead)),   # HatchedOrNot
c(rep(1,OnePetriDish$swimming + OnePetriDish$freaks),rep(0,OnePetriDish$hatched - OnePetriDish$swimming -  OnePetriDish$freaks),rep(NA,OnePetriDish$total-OnePetriDish$swimming-OnePetriDish$freaks - (OnePetriDish$hatched - OnePetriDish$swimming -  OnePetriDish$freaks))),                                                                                           # SwimmingOrNot
c(rep(1,OnePetriDish$swimming),rep(0,OnePetriDish$freaks),rep(NA,OnePetriDish$total-OnePetriDish$swimming-OnePetriDish$freaks))
# SwimmingNormallyOrNot
)
New = data.frame(New)
names(New)=c('petri','family','temperature','time','enu','FertilizedOrNot','HatchedOrNot','SwimmingOrNot','SwimmingNormallyOrNot')
if (i == 1) {Final = New}
if (i >  1) {Final = rbind(Final,New)}
}
### delete enu = 2 and keep only 0 (healthy) and 1 (mutants)
table(Final$enu)
Final$DummyMutant1 = NA
Final$DummyMutant2 = NA
table(Final$time)
Final$DummyShock30 = NA
Final$DummyShock40 = NA
Final$DummyShock50 = NA
for (i in 1:nrow(Final))
{ # i = 1
if (Final$enu[i] == 0) {Final$DummyMutant1[i] = 0}
if (Final$enu[i] == 1) {Final$DummyMutant1[i] = 1}
if (Final$enu[i] == 0) {Final$DummyMutant2[i] = 0}
if (Final$enu[i] == 2) {Final$DummyMutant2[i] = 1}
if (Final$time[i] == 0) {Final$DummyShock30[i] = 0}
if (Final$time[i] == 30) {Final$DummyShock30[i] = 1}
if (Final$time[i] == 0) {Final$DummyShock40[i] = 0}
if (Final$time[i] == 40) {Final$DummyShock40[i] = 1}
if (Final$time[i] == 0) {Final$DummyShock50[i] = 0}
if (Final$time[i] == 50) {Final$DummyShock50[i] = 1}
}
str(Final)
table(Final$DummyMutant1)
table(Final$DummyMutant2)
table(Final$DummyShock30)
table(Final$DummyShock40)
table(Final$DummyShock50)
Final$HatchedOrNot = as.numeric(Final$HatchedOrNot)
Final$SwimmingOrNot = as.numeric(Final$SwimmingOrNot)
Final$SwimmingNormallyOrNot = as.numeric(Final$SwimmingNormallyOrNot)
Final$FertilizedOrNot = as.numeric(Final$FertilizedOrNot)
# effect of a mutagen: AS EXPECTED FOR ALL FOUR PHENOTYPES !!!
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1, family = binomial)) # -0.62380
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2, family = binomial)) # -1.34791
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1, family = binomial)) # -0.7701
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant2, family = binomial)) # -1.2542
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyMutant1, family = binomial)) # -1.25509
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyMutant2, family = binomial)) # -1.84769
summary(glm(Final$FertilizedOrNot ~ Final$DummyMutant1, family = binomial)) # -0.43879
summary(glm(Final$FertilizedOrNot ~ Final$DummyMutant2, family = binomial)) # -1.39644
# effect of a shock:  AS EXPECTED FOR HatchedOrNot and noisy for other phenotypes (including for FertilizedOrNot - where we don't expect to see any effects)
summary(glm(Final$HatchedOrNot ~ Final$DummyShock30, family = binomial)) # -0.39905
summary(glm(Final$HatchedOrNot ~ Final$DummyShock40, family = binomial)) # -1.22456
summary(glm(Final$HatchedOrNot ~ Final$DummyShock50, family = binomial)) # -1.21147
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock30, family = binomial)) # -1.0765
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock40, family = binomial)) # 0
summary(glm(Final$SwimmingOrNot ~ Final$DummyShock50, family = binomial)) # 0
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock30, family = binomial)) # 0.62001
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock40, family = binomial)) # 0
summary(glm(Final$SwimmingNormallyOrNot ~ Final$DummyShock50, family = binomial)) # 0.68270
summary(glm(Final$FertilizedOrNot ~ Final$DummyShock30, family = binomial)) # 0.20943
summary(glm(Final$FertilizedOrNot ~ Final$DummyShock40, family = binomial)) # -0.36805
summary(glm(Final$FertilizedOrNot ~ Final$DummyShock50, family = binomial)) # 0.24872
# additive effects of mutagen and shock:  AS EXPECTED!!!
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyShock30, family = binomial)) # -0.61908 -0.54235
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyShock40, family = binomial)) # -1.48739 -0.86483
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$DummyShock50, family = binomial)) # -0.56460 -1.40612
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2 + Final$DummyShock30, family = binomial)) # -1.20038 -0.73067
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2 + Final$DummyShock40, family = binomial)) # -2.4482  -1.5739
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2 + Final$DummyShock50, family = binomial)) # -1.51755 -1.89158
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1 + Final$DummyShock30, family = binomial))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1 + Final$DummyShock40, family = binomial))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant1 + Final$DummyShock50, family = binomial))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant2 + Final$DummyShock30, family = binomial)) # -0.8848 -1.1246
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant2 + Final$DummyShock40, family = binomial))
summary(glm(Final$SwimmingOrNot ~ Final$DummyMutant2 + Final$DummyShock50, family = binomial))
# epistatic effects of mutagen and shock:  UNCLEAR (negative under 40 minutes and positive otherwise...)
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock30, family = binomial))   # 0.8869 ***
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock40, family = binomial))   # -0.6047 **
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1*Final$DummyShock50, family = binomial))   # 1.0030 ***
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock30, family = binomial))   # 0.5920 ***
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock40, family = binomial))   # -2.9985 ***
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant2*Final$DummyShock50, family = binomial))   # 0
# epistatic effects of mutagen and shock for each family separately - we need to add nested effect of families!
Fam11=Final[Final$family == '1x1',]
Fam12=Final[Final$family == '1x2',]
Fam21=Final[Final$family == '2x1',]
Fam22=Final[Final$family == '2x2',]
## Fam11
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock30)) # +
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock40))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant1*Fam11$DummyShock50)) # +
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock30))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock40))
summary(glm(Fam11$HatchedOrNot ~ Fam11$DummyMutant2*Fam11$DummyShock50)) # +
## Fam12
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant1*Fam12$DummyShock30))
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant1*Fam12$DummyShock40))
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant1*Fam12$DummyShock50)) # +
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant2*Fam12$DummyShock30))
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant2*Fam12$DummyShock40))
summary(glm(Fam12$HatchedOrNot ~ Fam12$DummyMutant2*Fam12$DummyShock50)) # +
## Fam21
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant1*Fam21$DummyShock30))
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant1*Fam21$DummyShock40))
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant1*Fam21$DummyShock50)) # -
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant2*Fam21$DummyShock30)) # +
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant2*Fam21$DummyShock40))
summary(glm(Fam21$HatchedOrNot ~ Fam21$DummyMutant2*Fam21$DummyShock50))
## Fam22
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant1*Fam22$DummyShock30))
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant1*Fam22$DummyShock40))
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant1*Fam22$DummyShock50))
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant2*Fam22$DummyShock30))
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant2*Fam22$DummyShock40)) # -
summary(glm(Fam22$HatchedOrNot ~ Fam22$DummyMutant2*Fam22$DummyShock50)) # -
summary(Final$time)
Final$time = as.numeric(Final$time)
summary(Final$time)
summary(glm(Final$HatchedOrNot ~ Final$time, family = binomial)) # -0.39905
summary(glm(Final$SwimmingOrNot ~ Final$time, family = binomial)) # -0.025959
summary(glm(Final$SwimmingNormallyOrNot ~ Final$time, family = binomial)) # -0.006894
summary(glm(Final$HatchedOrNot ~ Final$DummyMutant1 + Final$time, family = binomial)) # -0.61908 -0.54235
summary(glm(Final$HatchedOrNot ~ scale(Final$DummyMutant1) + scale(Final$time), family = binomial)) # -0.686158 -0.54235
summary(glm(Final$HatchedOrNot ~ scale(Final$DummyMutant2) + scale(Final$time), family = binomial)) # -0.34256 -0.51032
summary(glm(Final$HatchedOrNot ~ scale(Final$DummyMutant1)*scale(Final$time), family = binomial)) # -0.34256 -0.51032 GOOD
summary(glm(Final$HatchedOrNot ~ scale(Final$DummyMutant2)*scale(Final$time), family = binomial)) # -0.85140 -0.70167 GOOD
summary(glm(Final$HatchedOrNot ~ scale(Final$DummyMutant1)*scale(Final$time), family = binomial)) # positive, fuck
